[alias]
	# List aliases
	aliases = config --get-regexp alias
	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD
	# fuck it, redo
	nah = "!f(){ git reset --hard; git clean -df; if [ -d ".git/rebase-apply" ] || [ -d ".git/rebase-merge" ]; then git rebase --abort; fi; }; f"
	# show current branch
	b = branch
	branches = branch -a
	c = commit -am
	cherrypick = cherry-pick
	# I get lazy
	co = checkout
	# Checkout and pull master easier
	com = !"git checkout master && git pull"
	cp = cherry-pick
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
	last = checkout -
	# logs
	l = log -n 20 --graph --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	ld = "!sh -c \"git log --since '${1:-1} days ago' --oneline --author $(git config user.email)\" -"
	ll = log --graph --abbrev-commit --pretty=oneline
	lm = log --pretty=format:'* %s (%h)'
	# Clean up the branches
	pruneit = !"git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"
	remotes = remote -v
	s = status -s
	sv = status -v
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	unstage = reset --hard HEAD
	# Shorthand for version bump commit message
	vb = commit -am 'version bump'

[checkout]
	defaultRemote = origin

[color]
	ui = auto

[core]
	autocrlf = input
	excludesfile = /Users/thatryan/.gitignore_global
	editor = "subl -n -w"
	pager = delta

[credential]
	helper = osxkeychain

[delta]
    navigate = true  # use n and N to move between diff sections

[diff]
	renames = copies
	indentHeuristic = true
	colorMoved = default

[difftool]
	prompt = false

[difftool "sourcetree"]
	cmd = code --wait --diff $LOCAL $REMOTE
	path =

[fetch]
	prune = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process

[help]
	autocorrect = 1

[include]
  path = ~/.gitconfig.local

[interactive]
    diffFilter = delta --color-only

[log]
	date = human

[merge]
	conflictstyle = diff3
	defaultToUpstream = true

[mergetool]
	prompt = false

[mergetool "sourcetree"]
	cmd = code --wait $MERGED
	trustExitCode = true

[pull]
	ff = only
	default = current

[push]
	default = current
	followTags = true

[protocol]
	version = 2

[stash]
	showPatch = true
