#!/bin/sh

# My new Mac setup script, most of it ganked from
# https://github.com/thoughtbot/laptop

DOTFILES_ROOT="$HOME/dotfiles"

fancy_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

link_file () {
  local src=$1 dst=$2
  rm -rf "$dst"
  ln -s "$1" "$2"
  fancy_echo "linked" "$1" "to" $"2"
}

fancy_echo "Creating symlinks ..."

for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink')
do
  dst="$HOME/.$(basename "${src%.*}")"
  link_file "$src" "$dst"
done


append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  zshrc="$HOME/.zshrc"

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

fancy_echo "Creating directories ..."

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -d "$HOME/github/" ]; then
  mkdir "$HOME/github"
fi

if [ ! -d "$HOME/mamp/" ]; then
  mkdir "$HOME/mamp"
fi

if [ ! -d "$HOME/vagrant/" ]; then
  mkdir "$HOME/vagrant"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

brew_install_or_upgrade 'zsh'
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'ack'
brew_install_or_upgrade 'imagemagick'
brew_install_or_upgrade 'node'
brew_install_or_upgrade 'tree'
brew_install_or_upgrade 'watch'
brew_install_or_upgrade 'bradp/vv/vv'

# More recent versions
brew_install_or_upgrade 'coreutils'
brew_install_or_upgrade 'findutils'
brew_install_or_upgrade 'bash'
brew_install_or_upgrade 'gnu-tar'

append_to_zshrc 'export PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"' 1

brew_install_or_upgrade 'rbenv'
brew_install_or_upgrade 'ruby-build'

append_to_zshrc 'eval "$(rbenv init - --no-rehash zsh)"' 1

brew_install_or_upgrade 'openssl'
brew unlink openssl && brew link openssl --force

ruby_version="$(curl -sSL http://ruby.thoughtbot.com/latest)"

eval "$(rbenv init - zsh)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"

gem update --system

gem_install_or_update 'bundler'

fancy_echo "Configuring Bundler ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))

  #-----------------------------------------
  fancy_echo "Updating dupes ..."

  brew_tap 'homebrew/dupes'
  brew_install_or_upgrade 'grep'
  brew_install_or_upgrade 'rsync'

  fancy_echo "Updating cask apps ..."

  brew_tap 'caskroom/cask'
  brew_install_or_upgrade 'brew-cask'

  # Apps
  brew cask install 1password
  brew cask install alfred
  brew cask install bartender
  brew cask install cleanmymac
  brew cask install codekit
  brew cask install dropbox
  brew cask install evernote
  brew cask install flash
  brew cask install google-chrome
  brew cask install imageoptim
  brew cask install istat-menus
  brew cask install kaleidoscope
  brew cask install macdown
  brew cask install mamp
  brew cask install sizeup
  brew cask install skype
  brew cask install slack
  brew cask install sourcetree
  brew cask install spotify
  brew cask install textexpander
  brew cask install the-unarchiver
  brew cask install tower
  brew cask install transmit
  brew cask install vagrant
  brew cask install virtualbox
  brew cask install xtrafinder

  fancy_echo "Updating Quicklook plugins ..."
  # Quicklook plugins
  # https://github.com/sindresorhus/quick-look-plugins
  brew cask install qlcolorcode
  brew cask install qlstephen
  brew cask install qlmarkdown
  brew cask install quicklook-json
  brew cask install qlprettypatch
  brew cask install quicklook-csv
  brew cask install betterzipql
  brew cask install qlimagesize
  brew cask install webpquicklook
  brew cask install suspicious-package

  fancy_echo "Installing versioned apps ..."

  brew_tap 'caskroom/versions'

  # Versioned apps
  brew cask install sublime-text3

  fancy_echo "Installing fonts ..."

  brew_tap 'caskroom/fonts'

  # Fonts
  brew cask install font-droid-sans-mono
  brew cask install font-open-sans
  brew cask install font-raleway
  brew cask install font-roboto
  brew cask install font-source-code-pro

  fancy_echo "Node packages ..."

  # Node packages
  npm install -g gulp
  npm install -g grunt-cli
  npm install -g bower
  npm install -g pure-prompt

  fancy_echo "Updating gems ..."

  # Gems
  gem_install_or_update 'sass'
  gem_install_or_update 'bourbon'
  gem_install_or_update 'neat'

  rbenv rehash

fancy_echo "Remember to setup ssh yo, https://help.github.com/articles/generating-ssh-keys/"
