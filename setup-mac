#!/bin/sh

# My new Mac setup script, most of it ganked from
# https://github.com/thoughtbot/laptop

DOTFILES_ROOT="$HOME/dotfiles"

fancy_echo() {
  local fmt="$1"; shift

  printf "\n$fmt\n" "$@"
}

link_file () {
  local src=$1 dst=$2
  rm -rf "$dst"
  ln -s "$1" "$2"
  fancy_echo "linked" "$1" "to" $"2"
}

fancy_echo "Creating symlinks ..."

for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink')
do
  dst="$HOME/.$(basename "${src%.*}")"
  link_file "$src" "$dst"
done


append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  zshrc="$HOME/.zshrc"

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

fancy_echo "Creating directories ..."

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -d "$HOME/github/" ]; then
  mkdir "$HOME/github"
fi

if [ ! -d "$HOME/vagrant/" ]; then
  mkdir "$HOME/vagrant"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

update_shell() {
  local shell_path;
  shell_path="$(which zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  chsh -s "$shell_path"
}

case "$SHELL" in
  */zsh)
    if [ "$(which zsh)" != '/usr/local/bin/zsh' ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

fancy_echo "Installing Homebrew formulas ..."
brew install 'zsh'
brew install 'git'
brew install 'the_silver_searcher'
brew install 'vim --with-override-system-vi'
brew install 'imagemagick'
brew install 'node'
brew install 'rbenv'
brew install 'ruby-build'
brew install 'tree'
brew install 'watch'
brew install 'openssl'
brew install 'mas'
brew install 'gnu-sed --with-default-names'
brew install 'wget --with-iri'

# More recent versions
brew install 'coreutils'
brew install 'findutils'
brew install 'bash'
brew install 'gnu-tar'

append_to_zshrc 'export PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"' 1

brew unlink openssl && brew link openssl --force

fancy_echo "Configuring Ruby ..."
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
# shellcheck disable=SC2016
append_to_zshrc 'eval "$(rbenv init - --no-rehash)"' 1
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"

#-----------------------------------------
fancy_echo "Updating dupes ..."

brew tap 'homebrew/dupes'
brew install 'grep'
brew install 'rsync'

fancy_echo "Updating cask apps ..."

brew tap 'caskroom/cask'
brew install 'brew-cask'

# Apps
brew cask install 1password
brew cask install alfred
brew cask install carbon-copy-cloner
brew cask install cleanmymac
brew cask install dropbox
brew cask install evernote
brew cask install flash
brew cask install firefox
brew cask install hyper
brew cask install java
brew cask install google-chrome
brew cask install imageoptim
brew cask install istat-menus
brew cask install kaleidoscope
brew cask install macdown
brew cask install sequel-pro
brew cask install sizeup
brew cask install skype
brew cask install slack
brew cask install sourcetree
brew cask install sublime-text
brew cask install the-unarchiver
brew cask install tower
brew cask install transmit
brew cask install vagrant
brew cask install virtualbox

fancy_echo "Updating Quicklook plugins ..."
# Quicklook plugins
# https://github.com/sindresorhus/quick-look-plugins
brew cask install qlcolorcode
brew cask install qlstephen
brew cask install qlmarkdown
brew cask install quicklook-json
brew cask install qlprettypatch
brew cask install quicklook-csv
brew cask install betterzipql
brew cask install qlimagesize
brew cask install webpquicklook
brew cask install suspicious-package

fancy_echo "Installing fonts ..."

brew tap 'caskroom/fonts'

# Fonts
brew cask install font-droid-sans-mono
brew cask install font-open-sans
brew cask install font-raleway
brew cask install font-roboto
brew cask install font-source-code-pro

fancy_echo "Node packages ..."

# Node packages
npm install -g gulp
npm install -g grunt-cli
npm install -g bower
npm install -g pure-prompt

fancy_echo "Updating gems ..."

gem update --system

gem_install_or_update 'bundler'

fancy_echo "Configuring Bundler ..."
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

# Gems
gem_install_or_update 'sass'
gem_install_or_update 'bourbon'
gem_install_or_update 'neat'

rbenv rehash

fancy_echo "Remember to setup ssh yo, https://help.github.com/articles/generating-ssh-keys/"
